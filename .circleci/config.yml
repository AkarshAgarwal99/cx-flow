version: 2.1

# executors:
#   docker:
#     docker:
#       - image: circleci/golang:1.9

# commands: # a reusable command with parameters
#   create-github-release:
#     description: Create Github Release or Pre-Release
#     parameters:
#       ghr-option:
#         default: ""
#         type: string
#     steps:
#       - run: |
#           go get github.com/tcnksm/ghr
#           VERSION=$(cat ./build/libs/version.txt)
#           rm ./build/libs/version.txt
#           mv build/libs/java11/repo-${VERSION}.jar build/libs/cx-flow-${VERSION}-java11.jar
#           ghr -t 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 -u AkarshAgarwal99 -n ${VERSION} -r AkarshAgarwal99/cx-flow -c ${CIRCLE_SHA1} << parameters.ghr-option >> -delete ${VERSION} ./build/libs/

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run: ./gradlew clean build
      - run: ./gradlew -b build-11.gradle --build-cache assemble
      - run: ./gradlew -q getVersion > build/libs/version.txt
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/libs
      - persist_to_workspace:
          root: .
          paths:
            - build/libs/*
            - Dockerfile
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  test:
    working_directory: ~/circleci-python
    docker:
      - image: "circleci/python:3.6.4"
    steps:
      - checkout
      - run: python3 main.py

workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build